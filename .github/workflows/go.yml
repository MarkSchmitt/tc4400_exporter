name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [published]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Test
      run: go test -v .

    - name: Build amd64
    # Build statically linked so we can use it in a from scratch dockerfile
      run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -tags netgo -ldflags '-w' 

    - name: Build and Push Docker amd64
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: docker.pkg.github.com/markschmitt/tc4400_exporter/prometheus_exporter
        tags: ${{ github.sha }}-amd64

    - name: Build arm64
    # Build statically linked so we can use it in a from scratch dockerfile
      run: CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -a -tags netgo -ldflags '-w' 

    - name: Build and Push Docker arm64
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: docker.pkg.github.com/markschmitt/tc4400_exporter/prometheus_exporter
        tags: ${{ github.sha }}-arm64v8

    - name: Build arm
    # Build statically linked so we can use it in a from scratch dockerfile
      run: CGO_ENABLED=0 GOOS=linux GOARCH=arm go build -a -tags netgo -ldflags '-w' 

    - name: Build and Push Docker arm
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: docker.pkg.github.com/markschmitt/tc4400_exporter/prometheus_exporter
        tags: ${{ github.sha }}-arm32

    - name: Multi Arch manifest
      run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled 
          export DOCKER_REPO=docker.pkg.github.com/markschmitt/tc4400_exporter/prometheus_exporter
          export REF=$(echo ${{ github.ref }} | sed 's#refs/.*/##')
          cat ~/GH_TOKEN.txt | docker login https://docker.pkg.github.com -u markschmitt --password-stdin
          docker manifest create ${DOCKER_REPO}:${{ github.sha }} ${DOCKER_REPO}:${{ github.sha }}-amd64 ${DOCKER_REPO}:${{ github.sha }}-arm64v8 ${DOCKER_REPO}:${{ github.sha }}-arm32
          docker manifest annotate ${DOCKER_REPO}:${{ github.sha }} ${DOCKER_REPO}:${{ github.sha }}-arm32 --os linux --arch arm --variant v6
          docker manifest annotate ${DOCKER_REPO}:${{ github.sha }} ${DOCKER_REPO}:${{ github.sha }}-arm32 --os linux --arch arm --variant v7
          docker manifest annotate ${DOCKER_REPO}:${{ github.sha }} ${DOCKER_REPO}:${{ github.sha }}-arm64v8 --os linux --arch arm64 --variant v8
          docker manifest push --purge ${DOCKER_REPO}:${{ github.sha }}
          if [ "$REF" = "master" ]; then
            DOCKER_TAG="latest"
          else
            if [ "$REF" = "" ]; then
              return
            fi
              DOCKER_TAG=$REF
          fi
          docker manifest create ${DOCKER_REPO}:${DOCKER_TAG} ${DOCKER_REPO}:${{ github.sha }}-amd64 ${DOCKER_REPO}:${{ github.sha }}-arm64v8 ${DOCKER_REPO}:${{ github.sha }}-arm32
          docker manifest annotate ${DOCKER_REPO}:${DOCKER_TAG} ${DOCKER_REPO}:${{ github.sha }}-arm32 --os linux --arch arm --variant v6
          docker manifest annotate ${DOCKER_REPO}:${DOCKER_TAG} ${DOCKER_REPO}:${{ github.sha }}-arm32 --os linux --arch arm --variant v7
          docker manifest annotate ${DOCKER_REPO}:${DOCKER_TAG} ${DOCKER_REPO}:${{ github.sha }}-arm64v8 --os linux --arch arm64 --variant v8
          docker manifest push --purge ${DOCKER_REPO}:${DOCKER_TAG}

